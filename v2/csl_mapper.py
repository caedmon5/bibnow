# csl_mapper.py

"""
Maps a single CSL-JSON record to Zotero-compatible JSON format.

Assumes:
- Valid CSL input (e.g., generated by an LLM or exported from a processor)
- Standard field names like 'type', 'author', 'title', 'issued', etc.
- This version does NOT handle extra or invalid fields — that comes in phase 2.

See: zotero_writer.py for the upload logic
"""

from zotero_allowed_fields import ZOTERO_ALLOWED_FIELDS

# Minimal type mapping — expand as needed
CSL_TO_ZOTERO_TYPE = {
    "book": "book",
    "article-journal": "journalArticle",
    "paper-conference": "conferencePaper",
    "chapter": "bookSection",
    "webpage": "webpage",
    "thesis": "thesis",
    "manuscript": "manuscript",
    "presentation": "presentation",
    "report": "report"
}

def map_creators(csl_item):
    """
    Convert CSL 'author' and 'editor' fields into Zotero-style 'creators' array.
    """
    creators = []

    for role in ["author", "editor"]:
        if role in csl_item:
            for person in csl_item[role]:
                if isinstance(person, dict):
                    creators.append({
                        "creatorType": role,
                        "firstName": person.get("given", ""),
                        "lastName": person.get("family", "")
                    })
                elif isinstance(person, str):
                    creators.append({
                        "creatorType": role,
                        "name": person  # Fallback to single-name
                    })

    return creators


def csl_to_zotero(csl_item):
    """
    Convert a CSL JSON item into a minimal Zotero JSON record.

    Ignores fields not in Zotero's schema for now.
    """
    item_type = CSL_TO_ZOTERO_TYPE.get(csl_item.get("type", "document"), "document")

    # Use allowed field whitelist
    allowed_fields = ZOTERO_ALLOWED_FIELDS.get(item_type, [])

    # Start with required fields
    zotero_item = {
        "itemType": item_type,
        "title": csl_item.get("title", ""),
        "date": csl_item.get("issued", {}).get("raw", csl_item.get("issued", {}).get("date-parts", [[None]])[0][0]),
        "creators": map_creators(csl_item)
    }

    # Optionally map commonly used Zotero-compatible fields
    common_field_map = {
        "abstract": "abstractNote",
        "URL": "url",
        "DOI": "DOI",
        "publisher": "publisher",
        "container-title": "publicationTitle",
        "volume": "volume",
        "issue": "issue",
        "page": "pages"
    }

    for csl_field, zotero_field in common_field_map.items():
        if zotero_field in allowed_fields and csl_field in csl_item:
            zotero_item[zotero_field] = csl_item[csl_field]

    return zotero_item
